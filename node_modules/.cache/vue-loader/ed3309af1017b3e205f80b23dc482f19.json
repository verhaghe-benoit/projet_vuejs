{"remainingRequest":"/home/benoit/Bureau/projet_vuejs/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/benoit/Bureau/projet_vuejs/src/components/MyList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/benoit/Bureau/projet_vuejs/src/components/MyList.vue","mtime":1553614159342},{"path":"/home/benoit/Bureau/projet_vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/benoit/Bureau/projet_vuejs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/benoit/Bureau/projet_vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/benoit/Bureau/projet_vuejs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n    props: {\n        items: {\n            type: Array\n        }\n    },\n\n    data: () =>  ({\n        name: '',\n        itemName: '',\n        itemsLists: [],\n        itemsList: [],\n        filterMode: 'all'\n    }),\n\n    methods: {\n        addItem() {\n            this.itemsList.list.push({\n                name: this.itemName,\n                price: 0,\n                inBuyMode: false\n            })\n            this.itemToAdd = ''\n            this.updateIndexes()\n        },\n\n        deleteItem (index) {\n        this.itemsList.list = this.itemsList.list.filter(i => i.index !== index)\n        this.updateIndexes()\n        },\n\n        updateIndexes () {\n            this.itemsList.list = this.itemsList.list.map((o,i) => ({\n                ...o,\n                index: i\n            }))\n        }\n    },\n\n    mounted() {\n        const name = this.$route.params.name\n        this.itemsLists = JSON.parse(window.localStorage.getItem('itemsLists')) || {lists: [], lastUpdate: ''}\n        const itemsList = this.itemsLists.lists.find(l => l.name === name)\n        if(!itemsList) {\n            this.itemsList = {name: name, list: [], budget: 50}\n            this.itemsLists.lists.push(this.itemsList)\n        } else {\n            this.itemsList = itemsList\n        }\n    this.updateIndexes()\n  },\n  \n    watch: {\n        itemsList: {\n            handler () {\n                this.itemsLists.lists = this.itemsLists.lists.map(item => item.name === this.itemsList.name ? this.itemsList : item)\n                this.itemsLists.lastUpdate = this.itemsList.name\n                window.localStorage.setItem('itemsLists', JSON.stringify(this.itemsLists))\n            },\n            deep: true\n        }\n    },\n        \n    computed: {\n        total () {\n            if(this.itemsList.list)\n                return this.itemsList.list.reduce((acc, cur) => cur.inBuyMode ? acc += Number(cur.price) : acc,0)\n            return 0;\n        },\n\n        list () {\n            if(this.filterMode === 'notinBuyMode')\n                return this.itemsList.list.filter(i => !i.inBuyMode)\n            else if(this.filterMode === 'inBuyMode')\n                return this.itemsList.list.filter(i => i.inBuyMode)\n            else\n                return this.itemsList\n        },\n\n        alert () {\n            return this.total > this.itemsList.budget\n        }\n    },\n}\n",{"version":3,"sources":["MyList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"MyList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-container>\n        \n        <v-flex ma-2>\n            <v-btn-toggle align-content-center>\n                <v-btn flat class='filterMode === \"all\" ? \"btn btn-primary\" : \"btn btn-secondary\"' @click=\"filterMode = 'all'\">\n                    All\n                </v-btn>\n                <v-btn flat class='filterMode === \"inBuyMode\" ? \"btn btn-primary\" : \"btn btn-secondary\"' @click=\"filterMode = 'inBuyMode'\">\n                    Purchased\n                </v-btn>\n                <v-btn flat class='filterMode === \"notinBuyMode\" ? \"btn btn-primary\" : \"btn btn-secondary\"' @click=\"filterMode = 'notinBuyMode'\">\n                    In Stand by\n                </v-btn>\n            </v-btn-toggle>\n        </v-flex>\n\n        <v-card class=\"ma-2\">\n            <v-container>\n                <v-layout>\n                    <v-flex xs12 md4 align-content-space-around>\n                    <v-text-field\n                        v-model=\"budget\"\n                        label=\"Budget\"\n                        required\n                        hide-details\n                    >{{itemsList.budget}}</v-text-field>\n                    </v-flex>\n                    <v-spacer>\n                    </v-spacer>\n                    <v-list-tile-content class=\"align-end\">Total de la liste {{itemsList.name}} : {{ total }}</v-list-tile-content>\n                </v-layout>\n            </v-container>\n        </v-card>\n\n        <v-card class=\"mx-2\">\n            <v-form v-model=\"valid\">\n                <v-container>\n                    <v-layout>\n                        <v-flex xs12 md4 align-content-space-around>\n                        <v-text-field\n                            v-model=\"itemName\"\n                            label=\"Item name\"\n                            required\n                            hide-details\n                        ></v-text-field>\n                        </v-flex>\n                        <v-spacer>\n                        </v-spacer>\n                        <v-btn\n                            color=\"error\"\n                            @click=\"addItem\" \n                        >\n                            Add\n                        </v-btn>\n                    </v-layout>\n                </v-container>\n            </v-form>\n        </v-card>\n        \n\n        <v-data-iterator\n        :items=\"itemsList.list\"\n        content-tag=\"v-layout\"\n        row\n        wrap\n        hide-actions\n        >\n            <template v-slot:item=\"props\">\n                <v-flex xs12 sm6 md4 lg3 ma-2>\n                    <v-card>\n                        <v-card-title><h4>{{ props.item.name }}</h4></v-card-title>\n                        <v-divider></v-divider>\n                        <v-list dense>\n                            <v-list-tile>\n                                <v-text-field  label=\"Price\" v-model=\"props.item.price\" class=\"align-end\">{{ props.item.price }}</v-text-field>\n                            </v-list-tile>      \n                            <v-list-tile>\n                                <v-checkbox label=\"Purchased\" v-model=\"props.item.inBuyMode\" class=\"align-end\"></v-checkbox>\n                            </v-list-tile>  \n                            <v-list-tile>\n                                <v-btn color=\"error\" @click=\"deleteItem(props.item.index)\"> Delete  </v-btn> \n                            </v-list-tile>    \n                        </v-list>\n                    </v-card>\n                </v-flex>\n            </template>\n        </v-data-iterator>\n    </v-container>\n</template>\n\n<script>\n\nexport default {\n    props: {\n        items: {\n            type: Array\n        }\n    },\n\n    data: () =>  ({\n        name: '',\n        itemName: '',\n        itemsLists: [],\n        itemsList: [],\n        filterMode: 'all'\n    }),\n\n    methods: {\n        addItem() {\n            this.itemsList.list.push({\n                name: this.itemName,\n                price: 0,\n                inBuyMode: false\n            })\n            this.itemToAdd = ''\n            this.updateIndexes()\n        },\n\n        deleteItem (index) {\n        this.itemsList.list = this.itemsList.list.filter(i => i.index !== index)\n        this.updateIndexes()\n        },\n\n        updateIndexes () {\n            this.itemsList.list = this.itemsList.list.map((o,i) => ({\n                ...o,\n                index: i\n            }))\n        }\n    },\n\n    mounted() {\n        const name = this.$route.params.name\n        this.itemsLists = JSON.parse(window.localStorage.getItem('itemsLists')) || {lists: [], lastUpdate: ''}\n        const itemsList = this.itemsLists.lists.find(l => l.name === name)\n        if(!itemsList) {\n            this.itemsList = {name: name, list: [], budget: 50}\n            this.itemsLists.lists.push(this.itemsList)\n        } else {\n            this.itemsList = itemsList\n        }\n    this.updateIndexes()\n  },\n  \n    watch: {\n        itemsList: {\n            handler () {\n                this.itemsLists.lists = this.itemsLists.lists.map(item => item.name === this.itemsList.name ? this.itemsList : item)\n                this.itemsLists.lastUpdate = this.itemsList.name\n                window.localStorage.setItem('itemsLists', JSON.stringify(this.itemsLists))\n            },\n            deep: true\n        }\n    },\n        \n    computed: {\n        total () {\n            if(this.itemsList.list)\n                return this.itemsList.list.reduce((acc, cur) => cur.inBuyMode ? acc += Number(cur.price) : acc,0)\n            return 0;\n        },\n\n        list () {\n            if(this.filterMode === 'notinBuyMode')\n                return this.itemsList.list.filter(i => !i.inBuyMode)\n            else if(this.filterMode === 'inBuyMode')\n                return this.itemsList.list.filter(i => i.inBuyMode)\n            else\n                return this.itemsList\n        },\n\n        alert () {\n            return this.total > this.itemsList.budget\n        }\n    },\n}\n</script>\n\n\n<style scoped>\n</style>\n"]}]}
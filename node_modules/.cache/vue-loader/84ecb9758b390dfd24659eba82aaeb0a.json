{"remainingRequest":"/home/benoit/Bureau/VueJS/projet_vuejs/projet/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/benoit/Bureau/VueJS/projet_vuejs/projet/src/components/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/benoit/Bureau/VueJS/projet_vuejs/projet/src/components/List.vue","mtime":1553520493370},{"path":"/home/benoit/Bureau/VueJS/projet_vuejs/projet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/benoit/Bureau/VueJS/projet_vuejs/projet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/benoit/Bureau/VueJS/projet_vuejs/projet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/benoit/Bureau/VueJS/projet_vuejs/projet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    props: {\n        items: {\n            type: Array\n        }\n    },\n    data: () => ({\n        filterMode: 'all'\n    }),\n\n    methods: {\n        deleteItem (index) {\n            this.itemsList.list = this.itemsList.list.filter(i => i.index !== index)\n            this.updateIndexes()\n        },\n\n        toggle(index) {\n            this.items[index].inBuyMode = !this.items[index].inBuyMode\n        }\n    },\n\n    computed: {\n        list () {\n            if(this.filterMode === 'notinBuyMode')\n                return this.items.filter(i => !i.inBuyMode)\n            else if(this.filterMode === 'inBuyMode')\n                return this.items.filter(i => i.inBuyMode)\n            else\n                return this.items\n        }\n    }\n}\n",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div class=\"btn-group mb-3\" size=\"sm\" role=\"group\">\n            <button type=\"button\" :class='filterMode === \"all\" ? \"btn btn-primary\" : \"btn btn-secondary\"' @click=\"filterMode = 'all'\">All</button>\n            <button type=\"button\" :class='filterMode === \"inBuyMode\" ? \"btn btn-primary\" : \"btn btn-secondary\"' @click=\"filterMode = 'inBuyMode'\">Purchased</button>\n            <button type=\"button\" :class='filterMode === \"notinBuyMode\" ? \"btn btn-primary\" : \"btn btn-secondary\"' @click=\"filterMode = 'notinBuyMode'\">In StandBy</button>\n        </div>\n        <table id=\"shopping-list-table\" class=\"table table-condensed table-hover\">\n            <thead>\n                <tr>\n                    <th>Price</th>\n                    <th>Item</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tr v-for=\"(item, index) in list\" :key=\"index\">\n                <td v-if=\"item.inBuyMode\">\n                    <input type=\"number\" v-model=\"item.price\">\n                </td>\n                <td v-else>\n                    <span >{{ item.price }}</span>\n                </td>\n                <td>\n                    <span>{{ item.itemName }}</span>\n                </td>\n                <td>\n                    <input type=\"checkbox\" v-model=\"item.inBuyMode\"/>\n                    <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteItem(index)\"><i class=\"fa fa-remove\"></i> Delete  </button>\n                </td>\n            </tr>\n        </table>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        items: {\n            type: Array\n        }\n    },\n    data: () => ({\n        filterMode: 'all'\n    }),\n\n    methods: {\n        deleteItem (index) {\n            this.itemsList.list = this.itemsList.list.filter(i => i.index !== index)\n            this.updateIndexes()\n        },\n\n        toggle(index) {\n            this.items[index].inBuyMode = !this.items[index].inBuyMode\n        }\n    },\n\n    computed: {\n        list () {\n            if(this.filterMode === 'notinBuyMode')\n                return this.items.filter(i => !i.inBuyMode)\n            else if(this.filterMode === 'inBuyMode')\n                return this.items.filter(i => i.inBuyMode)\n            else\n                return this.items\n        }\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"]}]}
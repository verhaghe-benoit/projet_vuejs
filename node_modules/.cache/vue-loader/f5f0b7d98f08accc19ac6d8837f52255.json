{"remainingRequest":"/home/benoit/Bureau/projet_vuejs/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/benoit/Bureau/projet_vuejs/src/components/MyList.vue?vue&type=style&index=0&id=57abdd9a&scoped=true&lang=css&","dependencies":[{"path":"/home/benoit/Bureau/projet_vuejs/src/components/MyList.vue","mtime":1553612130795},{"path":"/home/benoit/Bureau/projet_vuejs/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/benoit/Bureau/projet_vuejs/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/benoit/Bureau/projet_vuejs/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/benoit/Bureau/projet_vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/benoit/Bureau/projet_vuejs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbody {\n    padding: 1%;\n    background-color: #abca\n}\n  \nh2, h4 {\n    font-family: 'Nunito', sans-serif;\n}\n  \n\n#shopping-list-table{\n    table-layout: fixed;\n    width: 50%;\n    vertical-align: middle;\n}\n  \nbutton {\n    margin-left: 2%;\n}\n",{"version":3,"sources":["MyList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsOA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"MyList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-container>\n        \n        <v-flex ma-2>\n            <v-btn-toggle align-content-center>\n                <v-btn flat class='filterMode === \"all\"' @click=\"filterMode = 'all'\">\n                    All\n                </v-btn>\n                <v-btn flat class='filterMode === \"inBuyMode\"' @click=\"filterMode = 'inBuyMode'\">\n                    Purchased\n                </v-btn>\n                <v-btn flat @click=\"filterMode = 'notinBuyMode'\">\n                    In Stand by\n                </v-btn>\n            </v-btn-toggle>\n        </v-flex>\n       \n\n\n        <v-card class=\"mx-2\">\n            <v-form v-model=\"valid\">\n                <v-container>\n                    <v-layout>\n                        <v-flex\n                        xs12\n                        md4\n                        align-content-space-around\n                        >\n                        <v-text-field\n                            v-model=\"itemName\"\n                            label=\"Item name\"\n                            required\n                            hide-details\n                        ></v-text-field>\n                        </v-flex>\n                        <v-spacer>\n                        </v-spacer>\n                        <v-btn\n                            color=\"error\"\n                            @click=\"addItem\"\n                            \n                        >\n                            Add\n                        </v-btn>\n                    </v-layout>\n                </v-container>\n            </v-form>\n        </v-card>\n        \n\n        <v-data-iterator\n      :items=\"itemsList.list\"\n      content-tag=\"v-layout\"\n      row\n      wrap\n      hide-actions\n    >\n      <template v-slot:item=\"props\">\n        <v-flex\n          xs12\n          sm6\n          md4\n          lg3\n          ma-2\n        >\n          <v-card>\n            <v-card-title><h4>{{ props.item.name }}</h4></v-card-title>\n            <v-divider></v-divider>\n            <v-list dense>\n                <v-list-tile>\n                    <v-text-field  label=\"Price\" v-model=\"props.item.price\" class=\"align-end\">{{ props.item.price }}</v-text-field>\n                </v-list-tile>      \n                <v-list-tile>\n                    <v-checkbox label=\"Purchased\" v-model=\"props.item.inBuyMode\" class=\"align-end\"></v-checkbox>\n                </v-list-tile>  \n                <v-list-tile>\n                    <v-btn color=\"error\" @click=\"deleteItem(props.item.index)\"> Delete  </v-btn> \n                </v-list-tile>    \n            </v-list>\n          </v-card>\n        </v-flex>\n      </template>\n    </v-data-iterator>\n\n        <form id=\"shopping-list\">\n            <h1>Budget :  <input type=\"number\" v-model=\"itemsList.budget\"></h1>\n            <h2> {{itemsList.name}} : {{ total }} </h2>\n            <!--<div class=\"alert alert-danger w-25\" role=\"alert\" v-if=\"alert\">\n                    Warning ! You are exceeding your budget !\n            </div>-->\n            <!--<list :items=\"itemsList\" class=\"mt-3\"></list>-->\n            <v-alert\n                :value=\"alert\"\n                type=\"error\"\n            >\n                Warning ! You are exceeding your budget !\n            </v-alert>\n            <div>\n            <div class=\"btn-group mb-3\" size=\"sm\" role=\"group\">\n                <button type=\"button\" :class='filterMode === \"all\" ? \"btn btn-primary\" : \"btn btn-secondary\"' @click=\"filterMode = 'all'\">All</button>\n                <button type=\"button\" :class='filterMode === \"inBuyMode\" ? \"btn btn-primary\" : \"btn btn-secondary\"' @click=\"filterMode = 'inBuyMode'\">Purchased</button>\n                <button type=\"button\" :class='filterMode === \"notinBuyMode\" ? \"btn btn-primary\" : \"btn btn-secondary\"' @click=\"filterMode = 'notinBuyMode'\">In StandBy</button>\n            </div>\n            <table id=\"shopping-list-table\" class=\"table table-condensed table-hover\">\n                <thead>\n                    <tr>\n                        <th>Price</th>\n                        <th>Item</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tr v-for=\"(item, index) in itemsList.list\" :key=\"index\">\n                    <td v-if=\"item.inBuyMode\">\n                        <input type=\"number\" v-model=\"item.price\">\n                    </td>\n                    <td v-else>\n                        <span >{{ item.price }}</span>\n                    </td>\n                    <td>\n                        <span>{{ item.name }}</span>\n                    </td>\n                    <td>\n                        <input type=\"checkbox\" v-model=\"item.inBuyMode\"/>\n                        <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteItem(index)\"><i class=\"fa fa-remove\"></i> Delete  </button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n            <h4>Add new item</h4>\n            <div class=\"row col-md-6\">\n                <div class=\"col-md-6 form-group\"> Name\n                    <input type=\"text\" v-model=\"itemName\">\n                </div>\n                <button type=\"button\" @click=\"addItem\" class=\"btn btn-primary\" > Add  </button>\n            </div>\n        </form>\n    </v-container>\n</template>\n\n<script>\n\nexport default {\n    props: {\n        items: {\n            type: Array\n        }\n    },\n\n    data: () =>  ({\n        name: '',\n        itemName: '',\n        itemsLists: [],\n        itemsList: [],\n        filterMode: 'all'\n    }),\n\n    methods: {\n        addItem() {\n            this.itemsList.list.push({\n                name: this.itemName,\n                price: 0,\n                inBuyMode: false\n            })\n            this.itemToAdd = ''\n            this.updateIndexes()\n        },\n\n        deleteItem (index) {\n        this.itemsList.list = this.itemsList.list.filter(i => i.index !== index)\n        this.updateIndexes()\n        },\n\n        updateIndexes () {\n            this.itemsList.list = this.itemsList.list.map((o,i) => ({\n                ...o,\n                index: i\n            }))\n        }\n    },\n\n    mounted() {\n        const name = this.$route.params.name\n        this.itemsLists = JSON.parse(window.localStorage.getItem('itemsLists')) || {lists: [], lastUpdate: ''}\n        const itemsList = this.itemsLists.lists.find(l => l.name === name)\n        if(!itemsList) {\n            this.itemsList = {name: name, list: [], budget: 50}\n            this.itemsLists.lists.push(this.itemsList)\n        } else {\n            this.itemsList = itemsList\n        }\n    this.updateIndexes()\n  },\n  \n    watch: {\n        itemsList: {\n            handler () {\n                this.itemsLists.lists = this.itemsLists.lists.map(item => item.name === this.itemsList.name ? this.itemsList : item)\n                this.itemsLists.lastUpdate = this.itemsList.name\n                window.localStorage.setItem('itemsLists', JSON.stringify(this.itemsLists))\n            },\n            deep: true\n        }\n    },\n        \n    computed: {\n        total () {\n            if(this.itemsList.list)\n                return this.itemsList.list.reduce((acc, cur) => cur.inBuyMode ? acc += Number(cur.price) : acc,0)\n            return 0;\n        },\n\n        list () {\n            if(this.filterMode === 'notinBuyMode')\n                return this.itemsList.filter(i => !i.inBuyMode)\n            else if(this.filterMode === 'inBuyMode')\n                return this.itemsList.filter(i => i.inBuyMode)\n            else\n                return this.itemsList\n        },\n\n        alert () {\n            return this.total > this.itemsList.budget\n        }\n    },\n}\n</script>\n\n\n<style scoped>\nbody {\n    padding: 1%;\n    background-color: #abca\n}\n  \nh2, h4 {\n    font-family: 'Nunito', sans-serif;\n}\n  \n\n#shopping-list-table{\n    table-layout: fixed;\n    width: 50%;\n    vertical-align: middle;\n}\n  \nbutton {\n    margin-left: 2%;\n}\n</style>\n"]}]}
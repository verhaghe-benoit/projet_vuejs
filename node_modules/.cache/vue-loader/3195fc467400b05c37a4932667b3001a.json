{"remainingRequest":"/home/benoit/Bureau/projet_vuejs/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/benoit/Bureau/projet_vuejs/src/components/Lists.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/benoit/Bureau/projet_vuejs/src/components/Lists.vue","mtime":1553606703862},{"path":"/home/benoit/Bureau/projet_vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/benoit/Bureau/projet_vuejs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/benoit/Bureau/projet_vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/benoit/Bureau/projet_vuejs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data: () => ({\n    lists: [],\n    headers: [{\n      text: 'Name',\n      value: 'name',\n      sortable: false\n    }, {\n      text: 'List Length',\n      value: 'list.length',\n      sortable: false\n    }, {\n      text: 'Budget',\n      value: 'budget',\n      sortable: false\n    }, {\n      text: 'Actions',\n      value: '',\n      sortable: false\n    }],\n    dialog: false,\n    name: '',\n    alert: false\n  }),\n  mounted () {\n    this.lists = JSON.parse(window.localStorage.getItem('itemsLists')).lists || [];\n  },\n  methods: {\n    deleteList (name) {\n      this.lists = this.lists.filter(l => l.name !== name)\n      window.localStorage.setItem('itemsLists',JSON.stringify(this.lists))\n    },\n    cancel () {\n      this.name = ''\n      this.dialog = false\n      this.alert = false\n    },\n    save () {\n      if(this.name === '' || this.lists.reduce((acc, cur) => cur.name === this.name ? true : acc,false))\n        this.alert = true\n      else {\n        this.$router.push('/lists/'+this.name)\n        this.cancel()\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Lists.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Lists.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container grid-list-xs>\n    <v-card>\n      <v-card-title primary-title>\n        <span class='title mr-5'>My lists</span>\n        <v-divider vertical></v-divider>\n        <v-spacer/>\n        <v-dialog v-model=\"dialog\" persistent max-width=\"600px\">\n          <template v-slot:activator=\"{ on }\">\n            <v-btn color=\"primary\" dark v-on=\"on\">New</v-btn>\n          </template>\n          <v-card>\n            <v-card-title>\n              <span class=\"headline\">List</span>\n            </v-card-title>\n\n            <v-alert\n              :value=\"alert\"\n              type=\"error\"\n            >\n              Name already taken or empty.\n            </v-alert>\n            <v-card-text>\n              <v-container grid-list-md>\n                <v-layout wrap>\n                  <v-flex xs12>\n                    <v-text-field v-model=\"name\" label=\"List name\"></v-text-field>\n                  </v-flex>\n                </v-layout>\n              </v-container>\n            </v-card-text>\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn color=\"blue darken-1\" flat @click=\"cancel\">Close</v-btn>\n              <v-btn color=\"blue darken-1\" flat @click=\"save\">Save</v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-card-title>\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"lists\"\n        class=\"elevation-1\"\n        hide-actions\n      >\n        <template v-slot:items=\"props\">\n          <td class=\"text-xs-left\">{{ props.item.name }}</td>\n          <td class=\"text-xs-left\">{{ props.item.list.length }}</td>\n          <td class=\"text-xs-left\">{{ props.item.budget }}</td>\n          <td class=\"justify-left px-0\">\n            <v-btn :to='\"/lists/\"+props.item.name'>SEE</v-btn>\n            <v-btn dark color=\"red darken-5\" @click=\"deleteList(props.item.name)\">DELETE</v-btn>\n          </td>\n        </template>\n      </v-data-table>\n    </v-card>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    lists: [],\n    headers: [{\n      text: 'Name',\n      value: 'name',\n      sortable: false\n    }, {\n      text: 'List Length',\n      value: 'list.length',\n      sortable: false\n    }, {\n      text: 'Budget',\n      value: 'budget',\n      sortable: false\n    }, {\n      text: 'Actions',\n      value: '',\n      sortable: false\n    }],\n    dialog: false,\n    name: '',\n    alert: false\n  }),\n  mounted () {\n    this.lists = JSON.parse(window.localStorage.getItem('itemsLists')).lists || [];\n  },\n  methods: {\n    deleteList (name) {\n      this.lists = this.lists.filter(l => l.name !== name)\n      window.localStorage.setItem('itemsLists',JSON.stringify(this.lists))\n    },\n    cancel () {\n      this.name = ''\n      this.dialog = false\n      this.alert = false\n    },\n    save () {\n      if(this.name === '' || this.lists.reduce((acc, cur) => cur.name === this.name ? true : acc,false))\n        this.alert = true\n      else {\n        this.$router.push('/lists/'+this.name)\n        this.cancel()\n      }\n    }\n  }\n}\n</script>"]}]}